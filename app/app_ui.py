import gradio as gr
from app.safety_check import is_prompt_safe
from app.gen_ai import generate_response
from app.mlops_logger import log_prompt

# === Nh·∫≠n di·ªán ·∫£nh nh·∫°y c·∫£m ===
from transformers import AutoProcessor, AutoModelForImageClassification
from PIL import Image
import torch

# T·∫£i model NSFW detector (c√≥ th·ªÉ thay ƒë·ªïi model n·∫øu mu·ªën)
model_id = "Falconsai/nsfw_image_detection"

processor = AutoProcessor.from_pretrained(model_id)
model = AutoModelForImageClassification.from_pretrained(model_id)

def check_image_nsfw(image: Image.Image):
    labels = model.config.id2label.values()  # l·∫•y nh√£n t·ª´ config: safe, nsfw
    inputs = processor(images=image, return_tensors="pt")
    with torch.no_grad():
        outputs = model(**inputs)
        probs = torch.nn.functional.softmax(outputs.logits, dim=1)[0]

    safe_prob = probs[0].item()
    nsfw_prob = probs[1].item()

    if nsfw_prob > safe_prob:
        return f"üö® ·∫¢nh KH√îNG an to√†n ({nsfw_prob * 100:.2f}%)"
    else:
        return f"‚úÖ ·∫¢nh an to√†n ({safe_prob * 100:.2f}%)"

# === Ki·ªÉm duy·ªát prompt ===
def handle_prompt(prompt):
    log_prompt(prompt, "OK", True, response)
    return "‚úÖ Prompt an to√†n", response
    
# === Giao di·ªán ===
with gr.Blocks(title="SAIFGuard - GENAI H·ªñ TR·ª¢ PH√ÅT HI·ªÜN PROMPT & IMAGE KH√îNG AN TO√ÄN", css="""
.yellow-btn {
    background-color: #FFD700 !important;
    color: black !important;
}
""") as demo:
    gr.Markdown("## üõ°Ô∏è SAIFGuard: GenAI Prompt & Image Safety Checker")
    
    with gr.Tab("üìù Ki·ªÉm duy·ªát Prompt"):
        with gr.Row():
            # C·ªôt b√™n tr√°i cho status, output v√† button
            with gr.Column(scale=1):
                prompt_status = gr.Textbox(label="Tr·∫°ng th√°i ki·ªÉm duy·ªát")
                prompt_output = gr.Textbox(label="K·∫øt qu·∫£ GenAI")
                prompt_button = gr.Button("Ki·ªÉm tra Prompt", elem_classes="yellow-btn")
            
            # C·ªôt b√™n ph·∫£i cho input
            with gr.Column(scale=1):
                prompt_input = gr.Textbox(label="Nh·∫≠p Prompt", lines=10)
        
        prompt_button.click(handle_prompt, inputs=prompt_input, outputs=[prompt_status, prompt_output])
    
    with gr.Tab("üñºÔ∏è Ki·ªÉm duy·ªát H√¨nh ·∫£nh"):
        with gr.Row():
            # C·ªôt b√™n tr√°i cho output v√† button
            with gr.Column(scale=1):
                image_output = gr.Textbox(label="Tr·∫°ng th√°i ki·ªÉm duy·ªát h√¨nh ·∫£nh")
                image_button = gr.Button("Ki·ªÉm tra H√¨nh ·∫£nh", elem_classes="yellow-btn")
            
            # C·ªôt b√™n ph·∫£i cho image input
            with gr.Column(scale=1):
                image_input = gr.Image(type="pil", label="T·∫£i ·∫£nh l√™n")
                
        image_button.click(fn=check_image_nsfw, inputs=image_input, outputs=image_output)