import gradio as gr
from app.gen_ai import generate_response
from app.mlops_logger import log_prompt
from app.safety_check import check_image_safe, is_prompt_safe

# === Ki·ªÉm duy·ªát Prompt ===
def handle_prompt(prompt):
    is_safe, reasons = is_prompt_safe(prompt)
    if not is_safe:
        return f"‚ùå Prompt kh√¥ng an to√†n: {', '.join(reasons)}", ""
    else:
        log_prompt(prompt)
        response = generate_response(prompt)
        return "‚úÖ Prompt an to√†n", response

# === Giao di·ªán ===
with gr.Blocks(title="SAIFGuard - H·ªÜ TH·ªêNG KI·ªÇM DUY·ªÜT TH√îNG MINH", css="""
.yellow-btn {
    background-color: #FFD700 !important;
    color: black !important;
}
""") as demo:
    gr.Markdown("## üõ°Ô∏è SAIFGuard: H·ªÜ TH·ªêNG KI·ªÇM DUY·ªÜT TH√îNG MINH")
    
    with gr.Tab("üìù Ki·ªÉm duy·ªát Prompt"):
        with gr.Row():
            with gr.Column(scale=1):
                prompt_input = gr.Textbox(label="Nh·∫≠p Prompt", lines=2)
            with gr.Column(scale=1):
                prompt_status = gr.Textbox(label="Tr·∫°ng th√°i ki·ªÉm duy·ªát")
                prompt_output = gr.Textbox(label="K·∫øt qu·∫£ GenAI")
                prompt_button = gr.Button("Ki·ªÉm tra Prompt", elem_classes="yellow-btn")
        prompt_button.click(handle_prompt, inputs=prompt_input, outputs=[prompt_status, prompt_output])
    
    with gr.Tab("üñºÔ∏è Ki·ªÉm duy·ªát H√¨nh ·∫£nh"):
        with gr.Row():
            with gr.Column(scale=1):
                image_input = gr.Image(type="pil", label="T·∫£i ·∫£nh l√™n")
            with gr.Column(scale=1):
                image_output = gr.Textbox(label="Tr·∫°ng th√°i ki·ªÉm duy·ªát h√¨nh ·∫£nh")
                image_button = gr.Button("Ki·ªÉm tra H√¨nh ·∫£nh", elem_classes="yellow-btn")
        image_button.click(fn=check_image_safe, inputs=image_input, outputs=image_output)
