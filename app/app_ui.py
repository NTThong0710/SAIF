import gradio as gr
from app.safety_check import is_prompt_safe, is_image_safe
from app.gen_ai import generate_response
from app.mlops_logger import log_prompt
from PIL import Image

# === Ki·ªÉm duy·ªát prompt ===
def handle_prompt(prompt):
    safe, info = is_prompt_safe(prompt)
    if not safe:
        log_prompt(prompt, info, False, "")
        return f"üö® Prompt kh√¥ng an to√†n! Ph√°t hi·ªán: {', '.join(info)}", ""
    
    response = generate_response(prompt)
    log_prompt(prompt, "OK", True, response)
    return "‚úÖ Prompt an to√†n", response

# === Ki·ªÉm duy·ªát ·∫£nh ===
def check_image_safety(image: Image.Image):
    safe, reasons = is_image_safe(image)
    if safe:
        return f"‚úÖ ·∫¢nh an to√†n: {', '.join(reasons)}"
    else:
        return f"üö® ·∫¢nh KH√îNG an to√†n: {', '.join(reasons)}"

# === Giao di·ªán ===
with gr.Blocks(title="SAIFGuard") as demo:
    gr.Markdown("## üõ°Ô∏è SAIFGuard")
    
    with gr.Tab("üìù Ki·ªÉm duy·ªát Prompt"):
        prompt_input = gr.Textbox(label="Nh·∫≠p Prompt")
        prompt_status = gr.Textbox(label="Tr·∫°ng th√°i ki·ªÉm duy·ªát")
        prompt_output = gr.Textbox(label="K·∫øt qu·∫£ GenAI")
        prompt_button = gr.Button("Ki·ªÉm tra Prompt")
        prompt_button.click(handle_prompt, inputs=prompt_input, outputs=[prompt_status, prompt_output])

    with gr.Tab("üñºÔ∏è Ki·ªÉm duy·ªát H√¨nh ·∫£nh"):
        image_input = gr.Image(type="pil", label="T·∫£i ·∫£nh l√™n")
        image_output = gr.Textbox(label="Tr·∫°ng th√°i ki·ªÉm duy·ªát h√¨nh ·∫£nh")
        image_button = gr.Button("Ki·ªÉm tra H√¨nh ·∫£nh")
        image_button.click(fn=check_image_safety, inputs=image_input, outputs=image_output)

demo.launch()
